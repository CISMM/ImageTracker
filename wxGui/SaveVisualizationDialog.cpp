// -*- C++ -*- generated by wxGlade 0.4.1 on Sun Sep 30 23:43:00 2007

#include "SaveVisualizationDialog.h"

#include <cmath>

#include "FileSet.h"
#include "ImageTrackerController.h"
#include "Logger.h"
#include "wxUtils.h"

bool SaveVisualizationDialog::TransferDataToWindow()
{
    char text[80];
    
    if (this->firstTime)
    {
        this->firstTime = false;

        sprintf(text, "%d", ImageTrackerController::Instance()->GetFrameIndex());
        this->textRangeFrom->SetValue(std2wx(std::string(text)));
        sprintf(text, "%d", ImageTrackerController::Instance()->GetMaxIndex());
        this->textRangeTo->SetValue(std2wx(std::string(text)));
    }

    sprintf(text, "(Max: %d)", ImageTrackerController::Instance()->GetMaxIndex());
    this->labelRangeMax->SetLabel(std2wx(std::string(text)));
    sprintf(text, "(%d)", ImageTrackerController::Instance()->GetFrameIndex());
    this->labelFrameCurrent->SetLabel(std2wx(std::string(text)));
    
    return true;
}

bool SaveVisualizationDialog::TransferDataFromWindow()
{
    return true;
}

SaveVisualizationDialog::SaveVisualizationDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, style),
    firstTime(true)
{
    // begin wxGlade: SaveVisualizationDialog::SaveVisualizationDialog
    label_42 = new wxStaticText(this, -1, wxT("Directory"));
    textDirectory = new wxTextCtrl(this, -1, wxT("."));
    btnBrowse = new wxButton(this, BTN_BROWSE, wxT("&Browse..."));
    label_43 = new wxStaticText(this, -1, wxT("File Pattern"));
    textFilePattern = new wxTextCtrl(this, -1, wxT("visualization"));
    label_44 = new wxStaticText(this, -1, wxT("-%04d.tif"));
    label_45 = new wxStaticText(this, -1, wxT("e.g. cell-flowvis"));
    label_49 = new wxStaticText(this, -1, wxT("Frames"));
    radFramesAll = new wxRadioButton(this, -1, wxT("All"), wxDefaultPosition, wxDefaultSize, wxRB_GROUP);
    radFramesRange = new wxRadioButton(this, -1, wxT("Range"));
    radFramesCurrent = new wxRadioButton(this, -1, wxT("Current"));
    label_50 = new wxStaticText(this, -1, wxT("From"));
    textRangeFrom = new wxTextCtrl(this, TXT_RANGE_FROM, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER);
    label_51 = new wxStaticText(this, -1, wxT("to"));
    textRangeTo = new wxTextCtrl(this, TXT_RANGE_TO, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER);
    labelRangeMax = new wxStaticText(this, -1, wxT("(max)"));
    labelFrameCurrent = new wxStaticText(this, -1, wxT("()"));
    text_ctrl_1 = new wxTextCtrl(this, -1, wxT("Note: Do not let any other window obscure the ImageTracker render window and do not minimize ImageTracker when saving visualizations. Doing so will probably corrupt the saved images. The frame index slider will provide progress information, and a message should be printed to the Logger window when finished if the proper logging level is enabled."), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxTE_WORDWRAP);
    btnRun = new wxButton(this, wxID_OK, wxT("&Run"));
    btnHide = new wxButton(this, wxID_CANCEL, wxT("&Hide"));

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(SaveVisualizationDialog, wxDialog)
    // begin wxGlade: SaveVisualizationDialog::event_table
    EVT_BUTTON(BTN_BROWSE, SaveVisualizationDialog::OnBrowse)
    EVT_TEXT_ENTER(TXT_RANGE_FROM, SaveVisualizationDialog::OnRangeFrom)
    EVT_TEXT_ENTER(TXT_RANGE_TO, SaveVisualizationDialog::OnRangeTo)
    EVT_BUTTON(wxID_OK, SaveVisualizationDialog::OnRun)
    EVT_BUTTON(wxID_CANCEL, SaveVisualizationDialog::OnHide)
    // end wxGlade
END_EVENT_TABLE();


void SaveVisualizationDialog::OnBrowse(wxCommandEvent &event)
{
    wxDirDialog dlg(this, wxT("Choose a directory"), this->textDirectory->GetValue());
    if(dlg.ShowModal() == wxID_OK)
    {
        this->textDirectory->SetValue(dlg.GetPath().Append(std2wx(FileSet::PATH_DELIMITER)));
    }
}

void SaveVisualizationDialog::OnRangeFrom(wxCommandEvent &event)
{
    std::string function("SaveVisualizationDialog::OnRangeFrom");
    Logger::verbose << function << ": entering" << std::endl;
    int value = atoi(wx2std(this->textRangeFrom->GetValue()).c_str());
    value = std::max(0, value);
    value = std::min(value, (int) ImageTrackerController::Instance()->GetMaxIndex());
    char text[80];
    sprintf(text, "%d", value);
    this->textRangeFrom->SetValue(std2wx(std::string(text)));
}


void SaveVisualizationDialog::OnRangeTo(wxCommandEvent &event)
{
    std::string function("SaveVisualizationDialog::OnRangeTo");
    Logger::verbose << function << ": entering" << std::endl;
    int value = atoi(wx2std(this->textRangeTo->GetValue()).c_str());
    value = std::max(0, value);
    value = std::min(value, (int) ImageTrackerController::Instance()->GetMaxIndex());
    char text[80];
    sprintf(text, "%d", value);
    this->textRangeTo->SetValue(std2wx(std::string(text)));
}


void SaveVisualizationDialog::OnRun(wxCommandEvent &event)
{
    event.Skip();
}


void SaveVisualizationDialog::OnHide(wxCommandEvent &event)
{
    event.Skip();
}

std::string SaveVisualizationDialog::GetFileFormat()
{
    return wx2std(this->textDirectory->GetValue().append(std2wx(FileSet::PATH_DELIMITER)).append(this->textFilePattern->GetValue()).append(_("-%04d.tif")));
}

int SaveVisualizationDialog::GetIndexStart()
{
    int from = 0;
    
    if (this->radFramesRange->GetValue())
    {
        from = atoi(wx2std(this->textRangeFrom->GetValue()).c_str());
    }
    else if (this->radFramesCurrent->GetValue())
    {
        from = ImageTrackerController::Instance()->GetFrameIndex();
    }
    
    return from;
}

int SaveVisualizationDialog::GetIndexEnd()
{
    int to = ImageTrackerController::Instance()->GetMaxIndex();
    
    if (this->radFramesRange->GetValue())
    {
        to = atoi(wx2std(this->textRangeTo->GetValue()).c_str());
    }
    else if (this->radFramesCurrent->GetValue())
    {
        to = ImageTrackerController::Instance()->GetFrameIndex();
    }
    
    return to;
}

// wxGlade: add SaveVisualizationDialog event handlers


void SaveVisualizationDialog::set_properties()
{
    // begin wxGlade: SaveVisualizationDialog::set_properties
    SetTitle(wxT("Save Visualizations"));
    SetSize(wxSize(466, 380));
    label_42->SetMinSize(wxSize(80, 17));
    label_43->SetMinSize(wxSize(80, 17));
    label_49->SetMinSize(wxSize(75, 25));
    radFramesAll->SetMinSize(wxSize(75, 25));
    radFramesAll->SetValue(1);
    radFramesRange->SetMinSize(wxSize(75, 25));
    radFramesCurrent->SetMinSize(wxSize(75, 25));
    label_50->SetMinSize(wxSize(32, 25));
    textRangeFrom->SetMinSize(wxSize(80, 27));
    label_51->SetMinSize(wxSize(13, 25));
    textRangeTo->SetMinSize(wxSize(80, 27));
    labelRangeMax->SetMinSize(wxSize(60, 25));
    labelFrameCurrent->SetMinSize(wxSize(80, 25));
    text_ctrl_1->Enable(false);
    // end wxGlade
}


void SaveVisualizationDialog::do_layout()
{
    // begin wxGlade: SaveVisualizationDialog::do_layout
    wxBoxSizer* sizer_43 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_44 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_45 = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_16 = new wxFlexGridSizer(1, 3, 5, 5);
    wxBoxSizer* sizer_49 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_50 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_48 = new wxBoxSizer(wxVERTICAL);
    wxFlexGridSizer* grid_sizer_15 = new wxFlexGridSizer(3, 3, 5, 5);
    grid_sizer_15->Add(label_42, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(textDirectory, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(btnBrowse, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(label_43, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(textFilePattern, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(label_44, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(20, 20, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(label_45, 0, wxALIGN_CENTER_HORIZONTAL|wxADJUST_MINSIZE, 0);
    grid_sizer_15->Add(20, 20, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_15->AddGrowableCol(1);
    sizer_43->Add(grid_sizer_15, 0, wxEXPAND, 0);
    grid_sizer_16->Add(80, 20, 0, wxADJUST_MINSIZE, 0);
    sizer_48->Add(label_49, 0, wxADJUST_MINSIZE, 0);
    sizer_48->Add(radFramesAll, 0, wxADJUST_MINSIZE, 0);
    sizer_48->Add(radFramesRange, 0, wxADJUST_MINSIZE, 0);
    sizer_48->Add(radFramesCurrent, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_16->Add(sizer_48, 1, wxEXPAND, 0);
    sizer_49->Add(75, 25, 0, wxADJUST_MINSIZE, 0);
    sizer_49->Add(75, 25, 0, wxADJUST_MINSIZE, 0);
    sizer_50->Add(label_50, 0, wxALIGN_BOTTOM|wxADJUST_MINSIZE, 0);
    sizer_50->Add(textRangeFrom, 0, wxLEFT|wxRIGHT|wxADJUST_MINSIZE, 5);
    sizer_50->Add(label_51, 0, wxALIGN_BOTTOM|wxADJUST_MINSIZE, 0);
    sizer_50->Add(textRangeTo, 0, wxLEFT|wxRIGHT|wxADJUST_MINSIZE, 5);
    sizer_50->Add(labelRangeMax, 0, wxALIGN_BOTTOM|wxADJUST_MINSIZE, 0);
    sizer_49->Add(sizer_50, 1, wxEXPAND, 0);
    sizer_49->Add(labelFrameCurrent, 0, wxADJUST_MINSIZE, 0);
    grid_sizer_16->Add(sizer_49, 1, wxEXPAND, 0);
    grid_sizer_16->AddGrowableCol(2);
    sizer_43->Add(grid_sizer_16, 0, wxEXPAND, 0);
    sizer_45->Add(text_ctrl_1, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
    sizer_43->Add(sizer_45, 1, wxEXPAND, 0);
    sizer_44->Add(btnRun, 0, wxADJUST_MINSIZE, 0);
    sizer_44->Add(btnHide, 0, wxADJUST_MINSIZE, 0);
    sizer_43->Add(sizer_44, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    SetAutoLayout(true);
    SetSizer(sizer_43);
    Layout();
    // end wxGlade
}

