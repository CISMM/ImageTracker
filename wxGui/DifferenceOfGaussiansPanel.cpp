// -*- C++ -*- generated by wxGlade 0.6.3 on Wed Aug 20 16:39:59 2008

#include "DifferenceOfGaussiansPanel.h"

// begin wxGlade: ::extracode

// end wxGlade


DifferenceOfGaussiansPanel::DifferenceOfGaussiansPanel(wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style):
    FilterControlPanel(parent, id, pos, size, wxTAB_TRAVERSAL)
{
    // begin wxGlade: DifferenceOfGaussiansPanel::DifferenceOfGaussiansPanel
    sizer_13_staticbox = new wxStaticBox(this, -1, wxT("Difference of Gaussians"));
    label_41 = new wxStaticText(this, wxID_ANY, wxT("Gaussian1 Sigma"));
    slideSigma1 = new wxDoubleSlider(this, SLIDE_SIGMA_1);
    label_54 = new wxStaticText(this, wxID_ANY, wxT("Gaussian2 Sigma"));
    slideSigma2 = new wxDoubleSlider(this, SLIDE_SIGMA_2);

    set_properties();
    do_layout();
    // end wxGlade
    
    this->name = "Difference of Gaussians";
    
    // setup sliders
    this->slideSigma1->SetRange(0.5, 24.0, 0.1);
    this->slideSigma2->SetRange(0.5, 24.0, 0.1);
    this->slideSigma1->SetValue(1.0);
    this->slideSigma2->SetValue(1.5);
    
    // setup itk filters
    // we have a 1D gaussian for each direction and each sigma, 4 total
    for (int i = 0; i < 4; i++)
    {
        this->gaussians[i] = GaussianType::New();
        this->gaussians[i]->SetDirection(i % 2);
        this->gaussians[i]->SetSigma((i < 2 ? 1.0 : 1.5));
    }
    
    // connect gaussians
    this->gaussians[1]->SetInput(this->gaussians[0]->GetOutput());
    this->gaussians[3]->SetInput(this->gaussians[2]->GetOutput());
    
    // connect to subtraction filter to find difference
    this->subtract = SubtractType::New();
    this->subtract->SetInput1(this->gaussians[1]->GetOutput());
    this->subtract->SetInput2(this->gaussians[3]->GetOutput());
}


BEGIN_EVENT_TABLE(DifferenceOfGaussiansPanel, wxPanel)
    EVT_SLIDER(SLIDE_SIGMA_1, DifferenceOfGaussiansPanel::OnSigma)
    EVT_SLIDER(SLIDE_SIGMA_2, DifferenceOfGaussiansPanel::OnSigma)
END_EVENT_TABLE();
        

void DifferenceOfGaussiansPanel::OnSigma(wxCommandEvent &event)
{
    this->gaussians[0]->SetSigma(this->slideSigma1->GetValue());
    this->gaussians[1]->SetSigma(this->slideSigma1->GetValue());
    
    this->gaussians[2]->SetSigma(this->slideSigma2->GetValue());
    this->gaussians[3]->SetSigma(this->slideSigma2->GetValue());
}


void DifferenceOfGaussiansPanel::set_properties()
{
    // begin wxGlade: DifferenceOfGaussiansPanel::set_properties
    // end wxGlade
}


void DifferenceOfGaussiansPanel::do_layout()
{
    // begin wxGlade: DifferenceOfGaussiansPanel::do_layout
    wxStaticBoxSizer* sizer_13 = new wxStaticBoxSizer(sizer_13_staticbox, wxVERTICAL);
    wxFlexGridSizer* grid_sizer_18 = new wxFlexGridSizer(2, 2, 5, 5);
    grid_sizer_18->Add(label_41, 0, 0, 0);
    grid_sizer_18->Add(slideSigma1, 1, wxEXPAND, 0);
    grid_sizer_18->Add(label_54, 0, 0, 0);
    grid_sizer_18->Add(slideSigma2, 1, wxEXPAND, 0);
    grid_sizer_18->AddGrowableCol(1);
    sizer_13->Add(grid_sizer_18, 1, wxEXPAND, 0);
    SetSizer(sizer_13);
    sizer_13->Fit(this);
    // end wxGlade
}

void DifferenceOfGaussiansPanel::SetInput(const ImageType* image)
{
    this->gaussians[0]->SetInput(image);
    this->gaussians[2]->SetInput(image);
}

DifferenceOfGaussiansPanel::ImageType* DifferenceOfGaussiansPanel::GetOutput()
{
    return this->subtract->GetOutput();
}
