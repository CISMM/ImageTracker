// -*- C++ -*- generated by wxGlade 0.6.3 on Wed Aug 13 12:18:01 2008

#include "RegionPanel.h"

// begin wxGlade: ::extracode

// end wxGlade


RegionPanel::RegionPanel(wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style):
    FilterControlPanel(parent, id, pos, size, wxTAB_TRAVERSAL)
{
    // begin wxGlade: RegionPanel::RegionPanel
    sizer_12_staticbox = new wxStaticBox(this, -1, wxT("Region of Interest"));
    label_18 = new wxStaticText(this, wxID_ANY, wxT("X"));
    label_26 = new wxStaticText(this, wxID_ANY, wxT("Left"));
    label_27 = new wxStaticText(this, wxID_ANY, wxT("Right"));
    slideRegionLeft = new wxIntSlider(this, SLIDE_REGION_LEFT);
    slideRegionRight = new wxIntSlider(this, SLIDE_REGION_RIGHT);
    label_31 = new wxStaticText(this, wxID_ANY, wxT("Y"));
    label_32 = new wxStaticText(this, wxID_ANY, wxT("Bottom"));
    label_40 = new wxStaticText(this, wxID_ANY, wxT("Top"));
    slideRegionBottom = new wxIntSlider(this, SLIDE_REGION_BOTTOM);
    slideRegionTop = new wxIntSlider(this, SLIDE_REGION_TOP);

    set_properties();
    do_layout();
    // end wxGlade
    
    this->name = "Region";
    
    this->slideRegionLeft->SetEnforceRange(true);
    this->slideRegionRight->SetEnforceRange(true);
    this->slideRegionTop->SetEnforceRange(true);
    this->slideRegionBottom->SetEnforceRange(true);
        
    this->roi = ROIType::New();
}


BEGIN_EVENT_TABLE(RegionPanel, wxPanel)
    EVT_SLIDER(SLIDE_REGION_LEFT, RegionPanel::OnRegion)
    EVT_SLIDER(SLIDE_REGION_RIGHT, RegionPanel::OnRegion)
    EVT_SLIDER(SLIDE_REGION_TOP, RegionPanel::OnRegion)
    EVT_SLIDER(SLIDE_REGION_BOTTOM, RegionPanel::OnRegion)
END_EVENT_TABLE();

void RegionPanel::OnRegion(wxCommandEvent &event)
{
    // build up region from sliders
    ImageType::IndexType start;
    ImageType::SizeType size;
    ImageType::RegionType region;
    
    start[0] = this->slideRegionLeft->GetValue();
    size[0] = this->slideRegionRight->GetValue() - start[0] + 1;
    start[1] = this->slideRegionTop->GetValue();
    size[1] = this->slideRegionBottom->GetValue() - start[1] + 1;
    region.SetIndex(start);
    region.SetSize(size);
    
    // apply region of interest
    this->roi->SetRegionOfInterest(region);
    this->roi->UpdateOutputInformation();
}

void RegionPanel::set_properties()
{
    // begin wxGlade: RegionPanel::set_properties
    // end wxGlade
}


void RegionPanel::do_layout()
{
    // begin wxGlade: RegionPanel::do_layout
    wxBoxSizer* sizer_11 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_12 = new wxStaticBoxSizer(sizer_12_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_17 = new wxFlexGridSizer(4, 3, 5, 5);
    grid_sizer_17->Add(label_18, 0, 0, 0);
    grid_sizer_17->Add(label_26, 0, 0, 0);
    grid_sizer_17->Add(label_27, 0, 0, 0);
    grid_sizer_17->Add(20, 20, 0, 0, 0);
    grid_sizer_17->Add(slideRegionLeft, 1, wxEXPAND, 0);
    grid_sizer_17->Add(slideRegionRight, 1, wxEXPAND, 0);
    grid_sizer_17->Add(label_31, 0, 0, 0);
    grid_sizer_17->Add(label_32, 0, 0, 0);
    grid_sizer_17->Add(label_40, 0, 0, 0);
    grid_sizer_17->Add(20, 20, 0, 0, 0);
    grid_sizer_17->Add(slideRegionBottom, 1, wxEXPAND, 0);
    grid_sizer_17->Add(slideRegionTop, 1, wxEXPAND, 0);
    grid_sizer_17->AddGrowableCol(1);
    grid_sizer_17->AddGrowableCol(2);
    sizer_12->Add(grid_sizer_17, 1, wxEXPAND, 0);
    sizer_11->Add(sizer_12, 1, wxEXPAND, 0);
    SetSizer(sizer_11);
    sizer_11->Fit(this);
    // end wxGlade
}

void RegionPanel::SetInput(const ImageType* input)
{
    // Get input image region data
    ImageType::RegionType region = input->GetLargestPossibleRegion();
    ImageType::IndexType start = region.GetIndex();
    ImageType::SizeType size = region.GetSize();

    // initialize ROI filter
    this->roi->SetInput(input);
    this->roi->SetRegionOfInterest(region);
    
    // find region bounds
    long left = start[0];
    long right = left + size[0] - 1;
    long bottom = start[1];
    long top = bottom + size[1] - 1;
    
    // set region slider ranges
    this->slideRegionLeft->SetRange(left, right);
    this->slideRegionRight->SetRange(left, right);
    this->slideRegionBottom->SetRange(bottom, top);
    this->slideRegionTop->SetRange(bottom, top);

    // set region slider values    
    this->slideRegionLeft->SetValue(left);
    this->slideRegionRight->SetValue(right);
    this->slideRegionBottom->SetValue(top);    
    this->slideRegionTop->SetValue(bottom);
}

RegionPanel::ImageType* RegionPanel::GetOutput()
{
    return this->roi->GetOutput();
}
