// -*- C++ -*- generated by wxGlade 0.6.3 on Sun Aug  3 16:53:10 2008

#include "LoggerDialog.h"

// begin wxGlade: ::extracode

// end wxGlade

#include "Logger.h"
#include "wxUtils.h"

LoggerDialog::LoggerDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME)
{
    // begin wxGlade: LoggerDialog::LoggerDialog
    const wxString radioLogLevel_choices[] = {
        wxT("Error"),
        wxT("Warn"),
        wxT("Info"),
        wxT("Debug"),
        wxT("Verbose")
    };
    radioLogLevel = new wxRadioBox(this, RADIO_LOG_LEVEL, wxT("Log Level"), wxDefaultPosition, wxDefaultSize, 5, radioLogLevel_choices, 1, wxRA_SPECIFY_ROWS);
    textLog = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE);
    buttonRefresh = new wxButton(this, BUTTON_REFRESH, wxT("&Refresh"));
    buttonHide = new wxButton(this, wxID_CANCEL, wxT("&Hide"));

    set_properties();
    do_layout();
    // end wxGlade
    
    this->filename = "";
}


BEGIN_EVENT_TABLE(LoggerDialog, wxDialog)
    // begin wxGlade: LoggerDialog::event_table
    EVT_RADIOBOX(RADIO_LOG_LEVEL, LoggerDialog::OnLogLevel)
    EVT_BUTTON(BUTTON_REFRESH, LoggerDialog::OnRefresh)
    EVT_BUTTON(wxID_CANCEL, LoggerDialog::OnHide)
    // end wxGlade
END_EVENT_TABLE();


void LoggerDialog::OnLogLevel(wxCommandEvent &event)
{
    int level = this->radioLogLevel->GetSelection();
    switch (level)
    {
        case 4:
            Logger::setLevel(Verbose);
            break;
        case 3:
            Logger::setLevel(Debug);
            break;
        case 2:
            Logger::setLevel(Info);
            break;
        case 1:
            Logger::setLevel(Warning);
            break;
        case 0:
        default:
            Logger::setLevel(Error);
            break;
    }
}


void LoggerDialog::OnRefresh(wxCommandEvent &event)
{
    this->UpdateText();
}


void LoggerDialog::OnHide(wxCommandEvent &event)
{
    event.Skip();
}


// wxGlade: add LoggerDialog event handlers


void LoggerDialog::set_properties()
{
    // begin wxGlade: LoggerDialog::set_properties
    SetTitle(wxT("Logger"));
    SetSize(wxSize(800, 200));
    radioLogLevel->SetSelection(2);
    // end wxGlade
}


void LoggerDialog::do_layout()
{
    // begin wxGlade: LoggerDialog::do_layout
    wxBoxSizer* sizer_67 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_68 = new wxBoxSizer(wxHORIZONTAL);
    sizer_67->Add(radioLogLevel, 0, wxEXPAND, 0);
    sizer_67->Add(textLog, 1, wxEXPAND, 0);
    sizer_68->Add(buttonRefresh, 0, 0, 0);
    sizer_68->Add(buttonHide, 0, 0, 0);
    sizer_67->Add(sizer_68, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    SetSizer(sizer_67);
    Layout();
    // end wxGlade
}


bool LoggerDialog::TransferDataToWindow()
{
    switch (Logger::getLevel())
    {
        case All:
        case Verbose:
            this->radioLogLevel->SetSelection(4);
            break;
        case Debug:
            this->radioLogLevel->SetSelection(3);
            break;
        case Info:
            this->radioLogLevel->SetSelection(2);
            break;
        case Warning:
            this->radioLogLevel->SetSelection(1);
            break;
        case Error:
        default:
            this->radioLogLevel->SetSelection(0);
            break;
    }
    
    this->UpdateText();

	return true;
}

void LoggerDialog::UpdateText()
{
    if (this->filename != "")
    {
        this->textLog->LoadFile(nano::std2wx(this->filename));
        this->textLog->ShowPosition(this->textLog->GetLastPosition());
    }
}

void LoggerDialog::SetFileName(const std::string& filename)
{
    this->filename = filename;
}
