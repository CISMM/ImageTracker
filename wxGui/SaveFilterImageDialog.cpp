// -*- C++ -*- generated by wxGlade 0.6.3 on Thu Aug 14 13:51:04 2008

#include "SaveFilterImageDialog.h"

// begin wxGlade: ::extracode

// end wxGlade

#include <string>

#include "FileSet.h"
#include "FileUtils.h"
#include "ImageFileSet.h"
#include "ImageTrackerController.h"
#include "ImageUtils.h"
#include "wxUtils.h"

SaveFilterImageDialog::SaveFilterImageDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME)
{
    // begin wxGlade: SaveFilterImageDialog::SaveFilterImageDialog
    sizer_74_staticbox = new wxStaticBox(this, -1, wxT("Output Options"));
    panelFilePattern = new FilePatternPanel(this, wxID_ANY);
    const wxString radioPixelType_choices[] = {
        wxT("16-bit"),
        wxT("Float")
    };
    radioPixelType = new wxRadioBox(this, wxID_ANY, wxT("Pixel Type"), wxDefaultPosition, wxDefaultSize, 2, radioPixelType_choices, 0, wxRA_SPECIFY_ROWS);
    checkRescale = new wxCheckBox(this, wxID_ANY, wxT("Rescale Intensities"));
    buttonRun = new wxButton(this, wxID_OK, wxT("&Run"));
    buttonCancel = new wxButton(this, wxID_CANCEL, wxT("&Hide"));

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(SaveFilterImageDialog, wxDialog)
    // begin wxGlade: SaveFilterImageDialog::event_table
    EVT_BUTTON(wxID_OK, SaveFilterImageDialog::OnOK)
    // end wxGlade
END_EVENT_TABLE();


void SaveFilterImageDialog::OnOK(wxCommandEvent &event)
{
    event.Skip();
}


// wxGlade: add SaveFilterImageDialog event handlers


void SaveFilterImageDialog::set_properties()
{
    // begin wxGlade: SaveFilterImageDialog::set_properties
    SetTitle(wxT("Save Filter Images"));
    radioPixelType->SetSelection(0);
    checkRescale->SetToolTip(wxT("Rescale output intensities to widest range allowed by pixel type"));
    // end wxGlade
}


void SaveFilterImageDialog::do_layout()
{
    // begin wxGlade: SaveFilterImageDialog::do_layout
    wxBoxSizer* sizer_73 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_75 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_74 = new wxStaticBoxSizer(sizer_74_staticbox, wxVERTICAL);
    sizer_73->Add(panelFilePattern, 1, wxEXPAND, 0);
    sizer_74->Add(radioPixelType, 0, wxEXPAND, 0);
    sizer_74->Add(checkRescale, 0, 0, 0);
    sizer_73->Add(sizer_74, 0, wxEXPAND, 0);
    sizer_75->Add(buttonRun, 0, 0, 0);
    sizer_75->Add(buttonCancel, 0, 0, 0);
    sizer_73->Add(sizer_75, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    SetSizer(sizer_73);
    sizer_73->Fit(this);
    Layout();
    // end wxGlade
}

bool SaveFilterImageDialog::TransferDataToWindow()
{
    // create a default output file pattern
    std::string dir(nano::wx2std(wxGetCwd()));
    CapDirectory(dir);
    std::string format("filter-%04d.tif");
    std::string example = ImageTrackerController::Instance()->GetImageFiles()[0];    
    unsigned int start = NumberPart(example);
    unsigned int end = start + ImageTrackerController::Instance()->GetImageCount() - 1;
    this->panelFilePattern->SetFilePattern(FilePattern(dir, format, start, end));
    
    this->panelFilePattern->SetRangeEnabled(false);
    this->panelFilePattern->TransferDataToWindow();
    
    return true;

}

bool SaveFilterImageDialog::TransferDataFromWindow()
{
    bool rescale = this->checkRescale->IsChecked();
    FileSet outFiles(this->panelFilePattern->GetFilePattern());
    ImageFileSet* images = ImageTrackerController::Instance()->GetImageFileSet();
    
    for (int i = 0; 
         i < images->GetImageCount() &&
         i < outFiles.size(); 
         i++)
    {
        if (this->radioPixelType->GetSelection() == 0)
        {
            // save 16-bit image, short pixels
            WriteImage<ImageTypeF2, ImageTypeUS2>(images->GetImage(i), outFiles[i], rescale);
        }
        else
        {
            // save floating point image
            WriteImage<ImageTypeF2, ImageTypeF2>(images->GetImage(i), outFiles[i], rescale);
        }
    }
    
    return true;
}

