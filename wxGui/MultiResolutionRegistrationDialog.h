// -*- C++ -*- generated by wxGlade 0.4.1 on Fri Feb  2 17:46:58 2007

#include <wx/wx.h>
#include <wx/image.h>

#include "itkStatisticsImageFilter.h"
#include "vtkRenderer.h"

#include "ImageTrackerController.h"
#include "MultiResolutionRegistrationPipeline.h"
#include "ScalarImageItkVtkPipeline.h"
#include "wxDoubleSlider.h"
#include "wxIntSlider.h"

#ifndef MULTIRESOLUTIONREGISTRATIONDIALOG_H
#define MULTIRESOLUTIONREGISTRATIONDIALOG_H

// begin wxGlade: ::dependencies
// end wxGlade

class MultiResolutionRegistrationDialog: public wxDialog {
public:
    // begin wxGlade: MultiResolutionRegistrationDialog::ids
    // end wxGlade
    enum IDs
    {
        CBX_ENABLE = 3020,
        SLD_UPPER_BOUND,
        SLD_LOWER_BOUND,
        CMB_RANGE,
        SLD_MAX_SMOOTH,
        SLD_MIN_SMOOTH,
        BTN_BROWSE_DIR,
        BTN_BROWSE_TRANSFORM
    };

    MultiResolutionRegistrationDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxDEFAULT_DIALOG_STYLE);

    // Need stats for setting the bounds on threshold sliders
    typedef itk::StatisticsImageFilter< MultiResolutionRegistrationPipeline::ImageType > StatsType;
    
private:
    // begin wxGlade: MultiResolutionRegistrationDialog::methods
    void set_properties();
    void do_layout();
    // end wxGlade

protected:
    // begin wxGlade: MultiResolutionRegistrationDialog::attributes
    wxStaticBox* sizer_21_staticbox;
    wxStaticBox* sizer_23_staticbox;
    wxStaticBox* sizer_20_staticbox;
    wxStaticBox* sizer_22_staticbox;
    wxCheckBox* checkEnabled;
    wxStaticText* label_17;
    wxIntSlider* slideUpperBound;
    wxStaticText* label_18;
    wxIntSlider* slideLowerBound;
    wxStaticText* label_20_copy;
    wxComboBox* comboRange;
    wxStaticText* label_8;
    wxIntSlider* slideMaxSmooth;
    wxStaticText* label_9;
    wxIntSlider* slideMinSmooth;
    wxStaticText* label_21;
    wxIntSlider* slideIterations;
    wxStaticText* label_22;
    wxDoubleSlider* slideMaxStepLength;
    wxStaticText* label_23;
    wxDoubleSlider* slideMinStepLength;
    wxStaticText* label_24;
    wxDoubleSlider* slideStepScale;
    wxStaticText* label_10;
    wxTextCtrl* textDirectory;
    wxButton* btnBrowseDir;
    wxStaticText* label_11;
    wxTextCtrl* textTransform;
    wxButton* btnBrowseTransform;
    wxStaticText* label_12;
    wxTextCtrl* textPrefix;
    wxCheckBox* checkOpenOutput;
    wxButton* btnRun;
    wxButton* btnHide;
    // end wxGlade

    DECLARE_EVENT_TABLE();

public:
    void OnUpperBound(wxCommandEvent &event);
    void OnLowerBound(wxCommandEvent &event);
    void OnMaxSmooth(wxCommandEvent &event);
    void OnMinSmooth(wxCommandEvent &event);
    void OnThresholdEnabled(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnRange(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnBrowseDir(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnBrowseTransform(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnRun(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnHide(wxCommandEvent &event); // wxGlade: <event_handler>
    
public:
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    
    void SetController(ImageTrackerController::Pointer controller);
    void SetInput(DataSource::Pointer input);
    
protected:
    void ViewPreview(bool show);
    void UpdatePreview();

private:
    DataSource::Pointer input;
    MultiResolutionRegistrationPipeline::Pointer pipeline;
    ScalarImageItkVtkPipeline::Pointer visual;
    ImageTrackerController::Pointer controller;
    // Need to keep track of the first time the dialog is displayed
    // for setting up threshold sliders
    bool firstTime;
    bool preview;
    
}; // wxGlade: end class


#endif // MULTIRESOLUTIONREGISTRATIONDIALOG_H
