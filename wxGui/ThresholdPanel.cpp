// -*- C++ -*- generated by wxGlade 0.6.3 on Fri Jul 25 08:47:59 2008

#include "ThresholdPanel.h"

// begin wxGlade: ::extracode

// end wxGlade

#include "itkStatisticsImageFilter.h"

ThresholdPanel::ThresholdPanel(wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style):
    FilterControlPanel(parent, id, pos, size, wxTAB_TRAVERSAL)
{
    // begin wxGlade: ThresholdPanel::ThresholdPanel
    sizer_59_staticbox = new wxStaticBox(this, -1, wxT("Threshold"));
    label_12 = new wxStaticText(this, wxID_ANY, wxT("Upper Bound"));
    slideUpperBound = new wxDoubleSlider(this, SLIDE_UPPER_BOUND);
    label_13 = new wxStaticText(this, wxID_ANY, wxT("Lower Bound"));
    slideLowerBound = new wxDoubleSlider(this, SLIDE_LOWER_BOUND);
    label_14 = new wxStaticText(this, wxID_ANY, wxT("Range"));
    const wxString comboRange_choices[] = {
        wxT("8-bit"),
        wxT("16-bit"),
        wxT("From Image")
    };
    comboRange = new wxComboBox(this, COMBO_RANGE, wxT(""), wxDefaultPosition, wxDefaultSize, 3, comboRange_choices, wxCB_DROPDOWN|wxCB_READONLY);

    set_properties();
    do_layout();
    // end wxGlade
    this->name = "Threshold";
    
    this->slideUpperBound->SetRange(0.0, 255.0, 1.0);
    this->slideLowerBound->SetRange(0.0, 255.0, 1.0);
    this->slideUpperBound->SetValue(255);
    this->slideLowerBound->SetValue(0);
    
    this->threshold = ThresholdType::New();
}


BEGIN_EVENT_TABLE(ThresholdPanel, wxPanel)
    // begin wxGlade: ThresholdPanel::event_table
    EVT_COMBOBOX(COMBO_RANGE, ThresholdPanel::OnRange)
    // end wxGlade
    EVT_SLIDER(SLIDE_UPPER_BOUND, ThresholdPanel::OnBounds)
    EVT_SLIDER(SLIDE_LOWER_BOUND, ThresholdPanel::OnBounds)
END_EVENT_TABLE();


void ThresholdPanel::OnRange(wxCommandEvent &event)
{
    typedef unsigned char EightBit;
    typedef unsigned short SixteenBit;
    typedef itk::StatisticsImageFilter< ImageType > StatsType;
    
    int idx = this->comboRange->GetSelection();
    switch (idx)
    {
        case 0:
            this->slideUpperBound->SetRange(std::numeric_limits<EightBit>::min(),
                                            std::numeric_limits<EightBit>::max(), 1.0);
            this->slideLowerBound->SetRange(std::numeric_limits<EightBit>::min(),
                                            std::numeric_limits<EightBit>::max(), 1.0);
            break;
        case 1:
            this->slideUpperBound->SetRange(std::numeric_limits<SixteenBit>::min(),
                                            std::numeric_limits<SixteenBit>::max(), 1.0);
            this->slideLowerBound->SetRange(std::numeric_limits<SixteenBit>::min(),
                                            std::numeric_limits<SixteenBit>::max(), 1.0);
            break;
        case 2:
            StatsType::Pointer stats = StatsType::New();
            stats->SetInput(this->threshold->GetInput());
            stats->Update();
            float min = stats->GetMinimum();
            float max = stats->GetMaximum();
            float space = (max-min) / 255.0;
            this->slideUpperBound->SetRange(min, max, space);
            this->slideLowerBound->SetRange(min, max, space);
            break;
    }
}


// wxGlade: add ThresholdPanel event handlers


void ThresholdPanel::OnBounds(wxCommandEvent &event)
{
    int upper = this->slideUpperBound->GetValue();
    int lower = this->slideLowerBound->GetValue();
    
    // itkThreshold throws an exception if lower threshold exceeds upper threshold
    if (lower > upper)
    {
        upper = lower;
        this->slideUpperBound->SetValue(upper);
    }
    
    this->threshold->ThresholdOutside(lower, upper);
}

void ThresholdPanel::set_properties()
{
    // begin wxGlade: ThresholdPanel::set_properties
    comboRange->SetSelection(-1);
    // end wxGlade
}


void ThresholdPanel::do_layout()
{
    // begin wxGlade: ThresholdPanel::do_layout
    wxStaticBoxSizer* sizer_59 = new wxStaticBoxSizer(sizer_59_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_22 = new wxFlexGridSizer(3, 2, 5, 5);
    grid_sizer_22->Add(label_12, 0, 0, 0);
    grid_sizer_22->Add(slideUpperBound, 1, wxEXPAND, 0);
    grid_sizer_22->Add(label_13, 0, 0, 0);
    grid_sizer_22->Add(slideLowerBound, 1, wxEXPAND, 0);
    grid_sizer_22->Add(label_14, 0, 0, 0);
    grid_sizer_22->Add(comboRange, 0, wxEXPAND, 0);
    grid_sizer_22->AddGrowableCol(1);
    sizer_59->Add(grid_sizer_22, 1, wxEXPAND, 0);
    SetSizer(sizer_59);
    sizer_59->Fit(this);
    // end wxGlade
}

void ThresholdPanel::SetInput(const ImageType* input)
{
    this->threshold->SetInput(input);
}

ThresholdPanel::ImageType* ThresholdPanel::GetOutput()
{
    return this->threshold->GetOutput();
}
