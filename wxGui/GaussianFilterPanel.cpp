// -*- C++ -*- generated by wxGlade 0.6.3 on Mon Aug  4 14:55:52 2008

#include "GaussianFilterPanel.h"

// begin wxGlade: ::extracode

// end wxGlade


GaussianFilterPanel::GaussianFilterPanel(wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style):
    FilterControlPanel(parent, id, pos, size, wxTAB_TRAVERSAL)
{
    // begin wxGlade: GaussianFilterPanel::GaussianFilterPanel
    sizer_5_staticbox = new wxStaticBox(this, -1, wxT("Gaussian"));
    label_2 = new wxStaticText(this, wxID_ANY, wxT("X-direction"));
    slideSigmaX = new wxDoubleSlider(this, SLIDE_SIGMA_X);
    const wxString comboOrderX_choices[] = {
        wxT("Zero Order"),
        wxT("First Order"),
        wxT("Second Order")
    };
    comboOrderX = new wxComboBox(this, COMBO_ORDER_X, wxT(""), wxDefaultPosition, wxDefaultSize, 3, comboOrderX_choices, wxCB_DROPDOWN|wxCB_READONLY);
    label_17 = new wxStaticText(this, wxID_ANY, wxT("Y-direction"));
    slideSigmaY = new wxDoubleSlider(this, SLIDE_SIGMA_Y);
    const wxString comboOrderY_choices[] = {
        wxT("Zero Order"),
        wxT("First Order"),
        wxT("Second Order")
    };
    comboOrderY = new wxComboBox(this, COMBO_ORDER_Y, wxT(""), wxDefaultPosition, wxDefaultSize, 3, comboOrderY_choices, wxCB_DROPDOWN|wxCB_READONLY);

    set_properties();
    do_layout();
    // end wxGlade
    
    this->name = "Gaussian";
    
    // setup sliders
    this->slideSigmaX->SetRange(0.5, 24.0, 0.1);
    this->slideSigmaY->SetRange(0.5, 24.0, 0.1);
    this->slideSigmaX->SetValue(1.0);
    this->slideSigmaY->SetValue(1.0);
    
    // setup itk filters
    for (int i = 0; i < 2; i++)
    {
        this->gaussians[i] = GaussianType::New();
        this->gaussians[i]->SetDirection(i);
        this->gaussians[i]->SetSigma(1.0);
    }
    this->gaussians[1]->SetInput(this->gaussians[0]->GetOutput());
}


BEGIN_EVENT_TABLE(GaussianFilterPanel, wxPanel)
    EVT_SLIDER(SLIDE_SIGMA_X, GaussianFilterPanel::OnSigma)
    EVT_SLIDER(SLIDE_SIGMA_Y, GaussianFilterPanel::OnSigma)
    // begin wxGlade: GaussianFilterPanel::event_table
    EVT_COMBOBOX(COMBO_ORDER_X, GaussianFilterPanel::OnOrder)
    EVT_COMBOBOX(COMBO_ORDER_Y, GaussianFilterPanel::OnOrder)
    // end wxGlade
END_EVENT_TABLE();


void GaussianFilterPanel::OnOrder(wxCommandEvent &event)
{
    int orderX = this->comboOrderX->GetSelection();
    int orderY = this->comboOrderY->GetSelection();
    
    switch (orderX)
    {
        case 2:
            this->gaussians[0]->SetSecondOrder();
            break;
        case 1:
            this->gaussians[0]->SetFirstOrder();
            break;
        case 0:
        default:
            this->gaussians[0]->SetZeroOrder();
            break;
    }

    switch (orderY)
    {
        case 2:
            this->gaussians[1]->SetSecondOrder();
            break;
        case 1:
            this->gaussians[1]->SetFirstOrder();
            break;
        case 0:
        default:
            this->gaussians[1]->SetZeroOrder();
            break;
    }
}


// wxGlade: add GaussianFilterPanel event handlers


void GaussianFilterPanel::OnSigma(wxCommandEvent &event)
{
    this->gaussians[0]->SetSigma(this->slideSigmaX->GetValue());
    this->gaussians[1]->SetSigma(this->slideSigmaY->GetValue());
}

void GaussianFilterPanel::set_properties()
{
    // begin wxGlade: GaussianFilterPanel::set_properties
    comboOrderX->SetMinSize(wxSize(110, 29));
    comboOrderX->SetSelection(0);
    comboOrderY->SetMinSize(wxSize(110, 29));
    comboOrderY->SetSelection(0);
    // end wxGlade
}


void GaussianFilterPanel::do_layout()
{
    // begin wxGlade: GaussianFilterPanel::do_layout
    wxStaticBoxSizer* sizer_5 = new wxStaticBoxSizer(sizer_5_staticbox, wxVERTICAL);
    wxFlexGridSizer* grid_sizer_5 = new wxFlexGridSizer(2, 3, 5, 5);
    grid_sizer_5->Add(label_2, 0, 0, 0);
    grid_sizer_5->Add(slideSigmaX, 1, wxEXPAND, 0);
    grid_sizer_5->Add(comboOrderX, 0, 0, 0);
    grid_sizer_5->Add(label_17, 0, 0, 0);
    grid_sizer_5->Add(slideSigmaY, 1, wxEXPAND, 0);
    grid_sizer_5->Add(comboOrderY, 0, 0, 0);
    grid_sizer_5->AddGrowableCol(1);
    sizer_5->Add(grid_sizer_5, 1, wxEXPAND, 0);
    SetSizer(sizer_5);
    sizer_5->Fit(this);
    // end wxGlade
}

void GaussianFilterPanel::SetInput(const ImageType* image)
{
    this->gaussians[0]->SetInput(image);
}

GaussianFilterPanel::ImageType* GaussianFilterPanel::GetOutput()
{
    return this->gaussians[1]->GetOutput();
}
